import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import warnings

data=pd.read_csv('heart_disease_data.csv')
warnings.filterwarnings("ignore",category=UserWarning)
print(data.head())
print(data.shape)
print(data.info())
print(data.describe())
print(data.isnull().sum())
print(data.dtypes)
x=data.drop(columns='target',axis=1)
y=data['target']
print(x.head())
print(y.head())
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
model=LogisticRegression()
model.fit(x_train,y_train)
y_train_pred=model.predict(x_train)
acc_x_train=accuracy_score(y_train_pred,y_train)
print("Accuracy on Training data:",acc_x_train)

y_test_pred=model.predict(x_test)
acc_x_test=accuracy_score(y_test_pred,y_test)
print("Accuracy on Testing data:",acc_x_test)
#age,sex,cp,trestbps,chol,fbs,restecg,thalach,exang,oldpeak,slope,ca,thal
input={
    'age':int(input("Enter the age:\n")),
    'sex':int(input("If Male enter 1 else enter 0 for Female:\n")),
    'cp':int(input("Enter cp:\n")),
    'trestbps':int(input("Enter the trestbps:\n")),
    'chol':int(input("Enter the chol:\n")),
    'fbs':int(input("Enter the fbs:\n")),
    'restecg':int(input("Enter the restecg:\n")),
    'thalach':int(input("Enter the thalach:\n")),
    'exang':int(input("Enter the exang:\n")),
    'oldpeak':float(input("Enter the oldpeak:\n")),
    'slope':int(input("Enter the slope:\n")),
    'ca':int(input("Enter the ca:\n")),
    'thal':int(input("Enter the thal:\n")),
}
input_data=pd.DataFrame([input])
outu=model.predict(input_data)

"""inp=(63,1,3,145,233,1,0,150,0,2.3,0,0,1)
inp_array=np.asarray(inp)
inp_reshape=inp_array.reshape(1,-1)
out=model.predict(inp_reshape)"""
if(outu[0]==1):
    print("The person has Heart Disease")
else:
    print("The person doesn't have Heart Disease")
